namespace Countries.NET.Database
{
    using System.Collections.Generic;
    
    using Countries.NET.Enums;

    /// <summary>
    /// create an instance of Switzerland country
    /// </summary>
    public class Switzerland : Country
    {
        /// <summary>
        /// get the Switzerland country instance
        /// </summary>
        public static Switzerland Instance = new Switzerland(
            name: new LocalizedCountryName
            {
                { "eng", new CountryName(official: "Swiss Confederation", common: "Switzerland") },
                { "fra", new CountryName(official: "Conf√©d√©ration suisse", common: "Suisse") },
                { "gsw", new CountryName(official: "Schweizerische Eidgenossenschaft", common: "Schweiz") },
                { "ita", new CountryName(official: "Confederazione Svizzera", common: "Svizzera") },
                { "roh", new CountryName(official: "Confederaziun svizra", common: "Svizra") },
                { "ara", new CountryName(official: "ÿßŸÑÿßÿ™ÿ≠ÿßÿØ ÿßŸÑÿ≥ŸàŸäÿ≥ÿ±Ÿä", common: "ÿ≥ŸàŸäÿ≥ÿ±ÿß") },
                { "ces", new CountryName(official: "≈†v√Ωcarsk√° konfederace", common: "≈†v√Ωcarsko") },
                { "cym", new CountryName(official: "Swiss Confederation", common: "Switzerland") },
                { "deu", new CountryName(official: "Schweizerische Eidgenossenschaft", common: "Schweiz") },
                { "est", new CountryName(official: "≈†veitsi Konf√∂deratsioon", common: "≈†veits") },
                { "fin", new CountryName(official: "Sveitsin valaliitto", common: "Sveitsi") },
                { "hrv", new CountryName(official: "≈°vicarska Konfederacija", common: "≈†vicarska") },
                { "hun", new CountryName(official: "Sv√°jc", common: "Sv√°jc") },
                { "jpn", new CountryName(official: "„Çπ„Ç§„ÇπÈÄ£ÈÇ¶", common: "„Çπ„Ç§„Çπ") },
                { "kor", new CountryName(official: "Ïä§ÏúÑÏä§ Ïó∞Î∞©", common: "Ïä§ÏúÑÏä§") },
                { "nld", new CountryName(official: "Zwitserse Confederatie", common: "Zwitserland") },
                { "per", new CountryName(official: "⁄©ŸÜŸÅÿØÿ±ÿßÿ≥€åŸàŸÜ ÿ≥Ÿàÿ¶€åÿ≥", common: "ÿ≥Ÿàÿ¶€åÿ≥") },
                { "pol", new CountryName(official: "Konfederacja Szwajcarska", common: "Szwajcaria") },
                { "por", new CountryName(official: "Confedera√ß√£o Su√≠√ßa", common: "Su√≠√ßa") },
                { "rus", new CountryName(official: "–®–≤–µ–π—Ü–∞—Ä—Å–∫–∞—è –ö–æ–Ω—Ñ–µ–¥–µ—Ä–∞—Ü–∏—è", common: "–®–≤–µ–π—Ü–∞—Ä–∏—è") },
                { "slk", new CountryName(official: "≈†vajƒçiarska konfeder√°cia", common: "≈†vajƒçiarsko") },
                { "spa", new CountryName(official: "Confederaci√≥n Suiza", common: "Suiza") },
                { "swe", new CountryName(official: "Schweiziska edsf√∂rbundet", common: "Schweiz") },
                { "urd", new CountryName(official: "ÿ≥Ÿàÿ¶€åÿ≥  ŸÖÿ™ÿ≠ÿØ€Å", common: "ÿ≥Ÿà€åŸπÿ∞ÿ±ŸÑ€åŸÜ⁄à") },
                { "zho", new CountryName(official: "ÁëûÂ£´ËÅîÈÇ¶", common: "ÁëûÂ£´") },

            },
            cca2: "CH",
            cca3: "CHE",
            ccn3: "756",
            cioc: "SUI",
            flag: "üá®üá≠",
            region: Region.Europe,
            subregion: "Western Europe",
            independent: true,
            status: "officially-assigned",
            unMember: true,
            landlocked: true,
            idd: new InternationalDirectDialingInfo(root: "+4", suffixes: new string[] {"1", }),
            borders: new string[] { "AUT", "FRA", "ITA", "LIE", "DEU",  },
            capital: new string[] { "Bern",  },
            altSpellings: new string[] { "CH", "Swiss Confederation", "Schweiz", "Suisse", "Svizzera", "Svizra",  },
            tld: new string[] { ".ch",  },
            latlng: new double[] { 47, 8,  },
            timezones: new string[] { "UTC+01:00",  },
            languages: new Language[]
            {
                new Language(name: "French", iso6391: "fr", iso6392: "fra"),
                new Language(name: "Swiss German", iso6391: "gsw", iso6392: "gsw"),
                new Language(name: "Italian", iso6391: "it", iso6392: "ita"),
                new Language(name: "Romansh", iso6391: "rm", iso6392: "roh"),
            },
            currencies: new Currency[]
            {
                new Currency(code: "CHF", name: "Swiss franc", symbol: "Fr."),
            },
            demonyms: new Dictionary<string, DemonymsGender>
            {
                { "eng", new DemonymsGender(male: "Swiss", female: "Swiss") },
                { "fra", new DemonymsGender(male: "Swiss", female: "Swiss") },
            }
        );

        /// <summary>
        /// create an instance of Switzerland country
        /// </summary>
        /// <param name="name"></param>
        /// <param name="cca2"></param>
        /// <param name="cca3"></param>
        /// <param name="ccn3"></param>
        /// <param name="cioc"></param>
        /// <param name="flag"></param>
        /// <param name="region"></param>
        /// <param name="subregion"></param>
        /// <param name="independent"></param>
        /// <param name="status"></param>
        /// <param name="unMember"></param>
        /// <param name="landlocked"></param>
        /// <param name="idd"></param>
        /// <param name="borders"></param>
        /// <param name="capital"></param>
        /// <param name="altSpellings"></param>
        /// <param name="tld"></param>
        /// <param name="latlng"></param>
        /// <param name="timezones"></param>
        /// <param name="languages"></param>
        /// <param name="currencies"></param>
        /// <param name="demonyms"></param>
        private Switzerland(
            LocalizedCountryName name, 
            string cca2, 
            string cca3, 
            string ccn3, 
            string cioc, 
            string flag, 
            Region region, 
            string subregion, 
            bool independent, 
            string status, 
            bool unMember, 
            bool landlocked, 
            InternationalDirectDialingInfo idd, 
            IEnumerable<string> borders, 
            IEnumerable<string> capital, 
            IEnumerable<string> altSpellings, 
            IEnumerable<string> tld, 
            IEnumerable<double> latlng, 
            IEnumerable<string> timezones, 
            IEnumerable<Language> languages, 
            IEnumerable<Currency> currencies,
            IDictionary<string, DemonymsGender> demonyms) 
            : base(name, cca2, cca3, ccn3, cioc, flag, region, subregion, independent, status, unMember, landlocked, idd, borders, capital, altSpellings, tld, latlng, timezones, languages, currencies, demonyms) { }
    }
}
