namespace Countries.NET.Database
{
    using System.Collections.Generic;
    
    using Countries.NET.Enums;

    /// <summary>
    /// create an instance of √ÖlandIslands country
    /// </summary>
    public class √ÖlandIslands : Country
    {
        /// <summary>
        /// get the √ÖlandIslands country instance
        /// </summary>
        public static √ÖlandIslands Instance = new √ÖlandIslands(
            name: new LocalizedCountryName
            {
                { "eng", new CountryName(official: "√Öland Islands", common: "√Öland Islands") },
                { "swe", new CountryName(official: "Landskapet √Öland", common: "√Öland") },
                { "ara", new CountryName(official: "ÿ¨ÿ≤ÿ± ÿ£ŸàŸÑÿßŸÜÿØ", common: "ÿ¨ÿ≤ÿ± ÿ£ŸàŸÑÿßŸÜÿØ") },
                { "ces", new CountryName(official: "√Ölandsk√© ostrovy", common: "√Ölandy") },
                { "cym", new CountryName(official: "√Öland Islands", common: "√Öland Islands") },
                { "deu", new CountryName(official: "√Öland-Inseln", common: "√Öland") },
                { "est", new CountryName(official: "Ahvenamaa maakond", common: "Ahvenamaa") },
                { "fin", new CountryName(official: "Ahvenanmaan maakunta", common: "Ahvenanmaa") },
                { "fra", new CountryName(official: "Ahvenanmaa", common: "Ahvenanmaa") },
                { "hrv", new CountryName(official: "Aland Islands", common: "√Ölandski otoci") },
                { "hun", new CountryName(official: "√Öland-szigetek", common: "√Öland-szigetek") },
                { "ita", new CountryName(official: "Isole √Öland", common: "Isole Aland") },
                { "jpn", new CountryName(official: "„Ç™„Éº„É©„É≥„ÉâË´∏Â≥∂", common: "„Ç™„Éº„É©„É≥„ÉâË´∏Â≥∂") },
                { "kor", new CountryName(official: "Ïò¨ÎûÄÎìú Ï†úÎèÑ", common: "Ïò¨ÎûÄÎìú Ï†úÎèÑ") },
                { "nld", new CountryName(official: "√Öland eilanden", common: "√Ölandeilanden") },
                { "per", new CountryName(official: "ÿ¨ÿ≤ÿß€åÿ± ÿßŸÑŸÜÿØ", common: "ÿ¨ÿ≤ÿß€åÿ± ÿßŸÑŸÜÿØ") },
                { "pol", new CountryName(official: "Wyspy Alandzkie", common: "Wyspy Alandzkie") },
                { "por", new CountryName(official: "Ilhas √Öland", common: "Al√¢ndia") },
                { "rus", new CountryName(official: "–ê–ª–∞–Ω–¥—Å–∫–∏–µ –æ—Å—Ç—Ä–æ–≤–∞", common: "–ê–ª–∞–Ω–¥—Å–∫–∏–µ –æ—Å—Ç—Ä–æ–≤–∞") },
                { "slk", new CountryName(official: "Alandsk√© ostrovy", common: "Alandy") },
                { "spa", new CountryName(official: "Islas √Öland", common: "Alandia") },
                { "urd", new CountryName(official: "ÿ¨ÿ≤ÿßÿ¶ÿ± ÿßŸàŸÑŸÜÿØ", common: "ÿ¨ÿ≤ÿßÿ¶ÿ± ÿßŸàŸÑŸÜÿØ") },
                { "zho", new CountryName(official: "Â••ÂÖ∞Áæ§Â≤õ", common: "Â••ÂÖ∞Áæ§Â≤õ") },

            },
            cca2: "AX",
            cca3: "ALA",
            ccn3: "248",
            cioc: "",
            flag: "üá¶üáΩ",
            region: Region.Europe,
            subregion: "Northern Europe",
            independent: false,
            status: "officially-assigned",
            unMember: false,
            landlocked: false,
            idd: new InternationalDirectDialingInfo(root: "+3", suffixes: new string[] {"5818", }),
            borders: new string[] {  },
            capital: new string[] { "Mariehamn",  },
            altSpellings: new string[] { "AX", "Aaland", "Aland", "Ahvenanmaa",  },
            tld: new string[] { ".ax",  },
            latlng: new double[] { 60.116667, 19.9,  },
            timezones: new string[] { "UTC+02:00",  },
            languages: new Language[]
            {
                new Language(name: "Swedish", iso6391: "sv", iso6392: "swe"),
            },
            currencies: new Currency[]
            {
                new Currency(code: "EUR", name: "Euro", symbol: "‚Ç¨"),
            },
            demonyms: new Dictionary<string, DemonymsGender>
            {
                { "eng", new DemonymsGender(male: "√Ölandish", female: "√Ölandish") },
                { "fra", new DemonymsGender(male: "√Ölandish", female: "√Ölandish") },
            }
        );

        /// <summary>
        /// create an instance of √ÖlandIslands country
        /// </summary>
        /// <param name="name"></param>
        /// <param name="cca2"></param>
        /// <param name="cca3"></param>
        /// <param name="ccn3"></param>
        /// <param name="cioc"></param>
        /// <param name="flag"></param>
        /// <param name="region"></param>
        /// <param name="subregion"></param>
        /// <param name="independent"></param>
        /// <param name="status"></param>
        /// <param name="unMember"></param>
        /// <param name="landlocked"></param>
        /// <param name="idd"></param>
        /// <param name="borders"></param>
        /// <param name="capital"></param>
        /// <param name="altSpellings"></param>
        /// <param name="tld"></param>
        /// <param name="latlng"></param>
        /// <param name="timezones"></param>
        /// <param name="languages"></param>
        /// <param name="currencies"></param>
        /// <param name="demonyms"></param>
        private √ÖlandIslands(
            LocalizedCountryName name, 
            string cca2, 
            string cca3, 
            string ccn3, 
            string cioc, 
            string flag, 
            Region region, 
            string subregion, 
            bool independent, 
            string status, 
            bool unMember, 
            bool landlocked, 
            InternationalDirectDialingInfo idd, 
            IEnumerable<string> borders, 
            IEnumerable<string> capital, 
            IEnumerable<string> altSpellings, 
            IEnumerable<string> tld, 
            IEnumerable<double> latlng, 
            IEnumerable<string> timezones, 
            IEnumerable<Language> languages, 
            IEnumerable<Currency> currencies,
            IDictionary<string, DemonymsGender> demonyms) 
            : base(name, cca2, cca3, ccn3, cioc, flag, region, subregion, independent, status, unMember, landlocked, idd, borders, capital, altSpellings, tld, latlng, timezones, languages, currencies, demonyms) { }
    }
}
